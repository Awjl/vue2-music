1，空白安装包
2，main.js 引入 fastclick //在body下的所有点击事件都减少一个300毫秒的延迟 

3,页面骨架的开发
公共组件 头部组件(m-header) 切换栏组件(tab)

四个页面及路由 rank(头部) recommend(推荐页面) search(搜索页面) singer(歌手页面)
添加了 六个组件 修改路由配置和main.js的内容，在app.vue中插入 router-view 并引入公共组件

4,推荐页面的开发
jsonp的原理
并不是ajax请求  动态创建script标签，进行解决跨域问题
 ./common/js/jsonp 封装一个jsonp
 并在这个函数中进行拼接

在./api/recommend中用jsonp调取接口获取数据
在./api/config.js中定义固定值

5，开发轮播组件
在./base/slider/slider
使用插件 better-scroll 实现slider轮播 针对移动端 
 ./common/js/dom  添加一个可以操作DOM元素的组件

6,歌单列表的开发
//小知识点  在router-view 标签外，在包括一个keep-alive标签，可以存一个缓存，不需要多次请求接口，优化体验
在一个有定时器组件被销毁的时候，应该清除一下定时器，这样有利用内存的释放
jsonp 无法访问 
需要使用转换成自己的node地址，然后使用axios 请求自己的node地址绕过限制请求

在安装axios后，在build/dev-server.js 14行添加

7,图片懒加载  vue-lazyload插件
在main.js中引用  使用方法 在需要懒加载的图片上 使用 v-lazy 属性

8,歌手页面的开发
创建歌手API接口
歌手页面

9，创建歌手页面中的列表类组件

10,右侧快速入口
e.targe 获取当前对象
歌手页面完成，修改两个错误，1，./common/js/dom.js 中getData函数修改
2，
./components/singer/singer _normalizeSinger函数 中
map[key].items.push(new Singer({
    id: item.Fsinger_mid,
    name: item.Fsinger_name
}))


11，歌手详情页面
使用二级路由
子路由配置及转场动画

12，vuex 状态管理模式  使用场景 
1，解决多个组件状态共享
2，解决数据传递

vuex 初始化
actions.js(异步操作/修改 或者对于mutations的封装)
getters.js(获取state映射)
index.js(入口文件)
mutation-types.js(所有相关new action 名字 存储字符串常量)
mutations.js(所有的mutations)
state.js(所有状态)

第一步：定义state
第二步：定义mutation的修改，先定义mutation-types
第三步：拿到mutation-types，在mutation中修改操作
第四步：在getters中取数据到组件中
第五步：在index中引入（actions暂时不用）
第六步：注入main.js

12，详情列表组件

13，详情列表组件中套用 歌曲列表组件
backdrop-filter 高斯模糊属性

14,有关 music-list的优化
./common/js/dom

15, 播放器  重点核心
先设置vuex中的公用数据
第一步：在state.js定义公用概念 定义原始相关数据
第二步：在getter.js中引用  对数据的映射
第三步：在mutation-types中引用 需要哪些修改动作
第四步：在mutation中 定义数据修改的逻辑
第五步：在anctions中定义，有需要时在定义，不需要时不需要定义 处理异步操作，或者是处理mutation的封装 如果需要触发多个mutation操作时，需要封装，在使用anctions进行操作

16,播放器组件
放在app.vue 下面

transition vue 自带的过度系统

钩子函数 动画
@enter="enter" 
@after-enter="afterEnter"
@leave="leave" 
@after-leave="leaveEnter"

引入动画插件 create-keyframe-animation

17,实现播放功能 点击播放暂停

18，实现中间CD转动事件

19,歌曲的前进和后退

20,歌曲时长

21,进度条
控制进度条的移动
touchstart.prevent  .prevent组织浏览器默认事件

原型进度条
<slot></slot>  插槽
//圆形进度条的核心点
:stroke-dasharray="dashArray"
:stroke-dashoffset="dashOffset"

播放模式 完成

歌词抓取 第三方库lyric-parser 解析歌词

组件功能完善

22，主页跳转至详情页
歌单详情页

每次在VUEX增加一个数据的时候，都需要修改state.js => mutation.types => mutations => getters =>(如果有需要修改的时候) actions

在页面中引用 VUEX的mapMutations方法  在methods中扩展 这个是传入数据
如
methods: {
    ...mapMutations({
        setDisc: 'SET_DISC'
      })
}
在接收数据的页面中  使用VUEX的mapGetters方法 在computed中扩展
如 
    computed: {
        ...mapGetters([
            'disc'
        ])
    }

23.排行榜的布局
****在webpack.base.config.js中module.exports函数下resolve的alias更改引入

